
namespace ViewModels

    class SimpleButton extends ViewModel

        override function template() as object

            return {
                sgName: "Group",
                theme: "buttons.simpleButton",
                fields: {
                    translation: m.props.translation ?? [0, 0]
                },
                focus: {
                    isEnabled: true,
                    onFocusChanged: sub (isFocused as boolean)

                        theme = m.context.theme.buttons.simpleButton
                        bg = m.getWidget("buttonBg")
                        label = m.getWidget("buttonBg/buttonLabel")

                        if isFocused
                            bg.node.blendColor = theme.bgColor_focused
                            label.node.color = theme.textColor_focused
                        else
                            bg.node.blendColor = theme.bgColor
                            label.node.color = theme.textColor
                        end if

                    end sub
                },
                children: {
                    id: "buttonBg",
                    sgName: "Poster",
                    fields: {
                        blendColor: "#theme.buttons.simpleButton.bgColor",
                        width: function()
                            return m.props.width ?? m.context.theme.buttons.simpleButton.width
                        end function,
                        height: "#theme.buttons.simpleButton.height",
                        uri: "#theme.buttons.simpleButton.posterUrl"
                    },
                    children: {
                        id: "buttonLabel",
                        sgName: "Label",
                        fontStyle: "#theme.buttons.simpleButton.fontStyle",
                        fields: {
                            text: m.props.text ?? m.props.id,
                            color: "#theme.buttons.simpleButton.textColor",
                            horizAlign: "left",
                            vertAlign: "center",
                            width: function()
                                return (m.props.width ?? m.context.theme.buttons.simpleButton.width) - 2 * m.context.theme.buttons.simpleButton.padding
                            end function,
                            height: function()
                                return m.context.theme.buttons.simpleButton.height - 2 * m.context.theme.buttons.simpleButton.padding
                            end function,
                            translation: function()
                                return [m.context.theme.buttons.simpleButton.padding, m.context.theme.buttons.simpleButton.padding]
                            end function
                        }
                    }
                }
            }
        end function

    end class

end namespace
