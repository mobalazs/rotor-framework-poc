import "../../../common/httpLogic/httpRouter.bs"
import "sharedLogic/sharedReaderReducer.bs"

namespace Reducers

    class HomeFeedReaderReducer extends SharedReaderReducer

        ' logic on top of the basic reducer class
        reducerParams = {
            url: "https://rotor-sample.b-cdn.net/mockups/feed/home_feed.json",
            useMockup: true
        }

        override function parser(data) as object
            createContentNode = Rotor.Utils.createContentNode

            content = createContentNode({
                state: data.Count() > 0 ? "operational" : "down"
            })

            index = 0
            rows = []
            for each rowKey in data

                ' items in a row
                items = []
                for each item in data[rowKey]
                    intemContentNode = createContentNode({
                        posterUrl: item.posterUrl
                    })
                    items.push(intemContentNode)
                end for

                ' create row
                rowContentNode = createContentNode({
                    title: rowKey,
                    rowKey: rowKey,
                    sort: index
                })
                rowContentNode.appendChildren(items)
                rows.push(rowContentNode)

                index++
            end for

            content.appendChildren(rows)

            return content
        end function


    end class

end namespace
