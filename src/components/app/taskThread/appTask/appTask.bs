' Rotor Framework Task
import "pkg:/source/libs/rotorFramework/RotorFrameworkTask.bs"

' Import common contants
import "pkg:/components/app/common/intentTypes.bs"

' Import Models and Reducers
import "app/appStore.bs"
import "app/appStoreReducer.bs"
import "user/userModel.bs"
import "user/userReducer.bs"
import "preloader/preloaderModel.bs"
import "preloader/preloaderReducer.bs"

sub init()
    m.top.functionName = "task"
    m.appFw = new Rotor.FrameworkTask({
        tasks: ["SleepTask", "SharedReaderTask"] ' optional
    })
end sub

sub task()

    ' * CREATE DISPATCHERS (Owned by this Task)

    ' App logic
    appStore = new Models.AppStore()
    appStoreReducer = new Reducers.AppStoreReducer()
    m.appStoreDispatcher = new Dispatcher("appStore", appStore, appStoreReducer)

    ' User logic
    userModel = new Models.UserModel()
    userReducer = new Reducers.userReducer()
    m.userDispatcher = new Dispatcher("user", userModel, userReducer)

    ' Preloader logic
    preloadModel = new Models.PreloaderModel()
    preloadReducer = new Reducers.PreloaderReducer()
    m.preloadDispatcher = new Dispatcher("preloader", preloadModel, preloadReducer)

    m.appFw.sync() ' main loop of multi-thread MVI
end sub
